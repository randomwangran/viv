/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;//D=0.1m

vertices
(
	(	-0.035355339	-0.035355339	-0.55	)	//	0
	(	0.035355339	-0.035355339	-0.55	)	//	1
	(	0.035355339	0.035355339	-0.55	)	//	2
	(	-0.035355339	0.035355339	-0.55	)	//	3
	(	-0.35	-0.35	-0.55	)	//	4
	(	0.35	-0.35	-0.55	)	//	5
	(	0.35	0.35	-0.55	)	//	6
	(	-0.35	0.35	-0.55	)	//	7
	(	-1.5	-1	-0.55	)	//	8
	(	-0.35	-1	-0.55	)	//	9
	(	0.35	-1	-0.55	)	//	10
	(	4	-1	-0.55	)	//	11
	(	4	-0.35	-0.55	)	//	12
	(	4	0.35	-0.55	)	//	13
	(	4	1	-0.55	)	//	14
	(	0.35	1	-0.55	)	//	15
	(	-0.35	1	-0.55	)	//	16
	(	-1.5	1	-0.55	)	//	17
	(	-1.5	0.35	-0.55	)	//	18
	(	-1.5	-0.35	-0.55	)	//	19
							
	(	-0.035355339	-0.035355339	-0.025	)	//	20
	(	0.035355339	-0.035355339	-0.025	)	//	21
	(	0.035355339	0.035355339	-0.025	)	//	22
	(	-0.035355339	0.035355339	-0.025	)	//	23
	(	-0.35	-0.35	-0.025	)	//	24
	(	0.35	-0.35	-0.025	)	//	25
	(	0.35	0.35	-0.025	)	//	26
	(	-0.35	0.35	-0.025	)	//	27
	(	-1.5	-1	-0.025	)	//	28
	(	-0.35	-1	-0.025	)	//	29
	(	0.35	-1	-0.025	)	//	30
	(	4	-1	-0.025	)	//	31
	(	4	-0.35	-0.025	)	//	32
	(	4	0.35	-0.025	)	//	33
	(	4	1	-0.025	)	//	34
	(	0.35	1	-0.025	)	//	35
	(	-0.35	1	-0.025	)	//	36
	(	-1.5	1	-0.025	)	//	37
	(	-1.5	0.35	-0.025	)	//	38
	(	-1.5	-0.35	-0.025	)	//	39

);


blocks
(
    hex (1 0 4 5 21 20 24 25) (50 80 1) simpleGrading (1 25 1)
    hex (2 1 5 6 22 21 25 26) (50 80 1) simpleGrading (1 25 1)
    hex (3 2 6 7 23 22 26 27) (50 80 1) simpleGrading (1 25 1)
    hex (0 3 7 4 20 23 27 24) (50 80 1) simpleGrading (1 25 1)
	
    hex (4 7 18 19 24 27 38 39) (50 40 1) simpleGrading (1 8 1)
    hex (7 16 17 18 27 36 37 38) (30 40 1) simpleGrading (5 8 1)
    hex (7 6 15 16 27 26 35 36) (50 30 1) simpleGrading (1 5 1)
    hex (6 13 14 15 26 33 34 35) (90 30 1) simpleGrading (10 5 1)
    hex (5 12 13 6 25 32 33 26) (90 50 1) simpleGrading (10 1 1)
    hex (5 10 11 12 25 30 31 32) (25 90 1) simpleGrading (5 10 1)
    hex (5 4 9 10 25 24 29 30) (50 25 1) simpleGrading (1 5 1)
    hex (4 19 8 9 24 39 28 29) (40 25 1) simpleGrading (8 5 1)
);

edges
(
arc	0	1	(	0	-0.05	-0.55	)
arc	1	2	(	0.05	0	-0.55	)
arc	2	3	(	0	0.05	-0.55	)
arc	3	0	(	-0.05	0	-0.55	)
//arc	4	5	(	0	-0.15	-0.55	)
//arc	5	6	(	0.15	0	-0.55	)
//arc	6	7	(	0	0.15	-0.55	)
//arc	7	4	(	-0.15	0	-0.55	)
							
arc	20	21	(	0	-0.05	-0.025	)
arc	21	22	(	0.05	0	-0.025	)
arc	22	23	(	0	0.05	-0.025	)
arc	23	20	(	-0.05	0	-0.025	)
//arc	24	25	(	0	-0.15	-0.025	)
//arc	25	26	(	0.15	0	-0.025	)
//arc	26	27	(	0	0.15	-0.025	)
//arc	27	24	(	-0.15	0	-0.025	)

);

boundary
(
    inlet
    {
        type wall;
        faces
        (
            (18 17 37 38)
			(19 18 38 39)
			(8 19 39 28)
        );
    }
    outlet
    {
        type wall;
        faces
        (
            (14 13 33 34)
			(13 12 32 33)
            (12 11 31 32)
        );
    }
    wing//cylinder
    {
        type wall;
        faces
        (
            (1 0 20 21)
            (0 3 23 20)
            (3 2 22 23)
            (2 1 21 22)
        );
    }
    topAndBottom//cylinder
    {
        type wall;
        faces
        (
            (17 16 36 37)
            (16 15 35 36)
            (15 14 34 35)
            (9 8 28 29)
            (10 9 29 30)
            (11 10 30 31)
        );
    }	

    symFront
    {
        type empty;
        faces
        (
			
			(22 23 27 26)
			(21 22 26 25)
			(20 21 25 24)
			(23 20 24 27)
			
			(25 26 33 32)
			(26 35 34 33)
			(27 36 35 26)
			(38 37 36 27)
			(39 38 27 24)
			(28 39 24 29)
			(29 24 25 30)
			(30 25 32 31)
        );
    }
	
    symBack
    {
        type empty;
        faces
        (			
			(2 6 7 3)
			(1 5 6 2)
			(0 4 5 1)
			(3 7 4 0)
			
			(5 12 13 6)
			(6 13 14 15)
			(7 6 15 16)
			(18 7 16 17)
			(19 4 7 18)
			(8 9 4 19)
			(9 10 5 4)
			(10 11 12 5)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
